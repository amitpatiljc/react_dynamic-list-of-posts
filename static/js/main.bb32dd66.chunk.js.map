{"version":3,"sources":["components/PostsList/PostsList.tsx","api/posts.ts","api/comments.ts","components/Loader/Loader.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","handlePostId","selectedPostId","className","map","post","userId","title","type","onClick","id","BASE_URL","getAllPosts","a","fetch","json","getUserPosts","userPosts","getPostDetails","postId","postDetails","getPostComments","postComments","removePostComment","commentId","method","postComment","addPostComment","name","email","body","headers","JSON","stringify","newComment","Loader","NewCommentForm","loadComments","useState","setName","setEmail","setBody","addNewComment","event","preventDefault","placeholder","value","onChange","target","PostDetails","setPostDetails","postDetailsLoaded","setPostDetailsLoaded","commentsHidden","setCommentsHidden","setPostComments","commentsFromServer","loadPostDetails","postsFromServer","useEffect","removeComment","length","comment","App","setPosts","setSelectedPostId","postsLoaded","setPostsLoaded","loadPosts","changeUser","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb32dd66.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ninterface Props {\n  posts: Post[];\n  selectedPostId: number;\n  handlePostId: (postId: number) => void\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  handlePostId,\n  selectedPostId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          className=\"PostsList__item\"\n          key={post.id}\n        >\n          <div>\n            <b>\n              {`[User #${post.userId}]: `}\n            </b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => handlePostId(post.id)}\n          >\n            {post.id === selectedPostId\n              ? 'Close'\n              : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getAllPosts = async () => {\n  const posts = await fetch(`${BASE_URL}/posts`);\n\n  return posts.json();\n};\n\nexport const getUserPosts = async (userId: number) => {\n  if (!userId) {\n    return getAllPosts();\n  }\n\n  const userPosts = await fetch((`${BASE_URL}/posts?userId=${userId}`));\n\n  return userPosts.json();\n};\n\nexport const getPostDetails = async (postId: number) => {\n  const postDetails = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return postDetails.json();\n};\n","import { BASE_URL } from './posts';\n\nexport const getPostComments = async (postId: number) => {\n  const postComments = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return postComments.json();\n};\n\nexport const removePostComment = async (commentId: number) => {\n  const postComment = await fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n\n  return postComment.json();\n};\n\nexport const addPostComment = async (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n) => {\n  const newComment = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return newComment.json();\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport { addPostComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\ninterface Props {\n  selectedPostId: number,\n  loadComments: () => Promise<void>,\n}\n\nexport const NewCommentForm: React.FC<Props> = ({\n  selectedPostId,\n  loadComments,\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const clearForm = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  const addNewComment\n    = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      event.preventDefault();\n\n      await addPostComment(selectedPostId, name, email, body);\n      loadComments();\n      clearForm();\n    };\n\n  return (\n    <form className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={(event) => addNewComment(event)}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPostComments, removePostComment } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ninterface Props {\n  selectedPostId: number;\n}\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [postDetails, setPostDetails] = useState<Post>();\n  const [postDetailsLoaded, setPostDetailsLoaded] = useState(false);\n  const [commentsHidden, setCommentsHidden] = useState(true);\n  const [postComments, setPostComments] = useState<PostComment[]>([]);\n\n  const loadComments = async () => {\n    const commentsFromServer = await getPostComments(selectedPostId);\n\n    setPostComments(commentsFromServer);\n  };\n\n  const loadPostDetails = async () => {\n    setPostDetailsLoaded(false);\n    const postsFromServer = await getPostDetails(selectedPostId);\n\n    setPostDetailsLoaded(true);\n\n    setPostDetails(postsFromServer);\n  };\n\n  useEffect(() => {\n    if (selectedPostId) {\n      loadPostDetails();\n      loadComments();\n    }\n  }, [selectedPostId]);\n\n  const removeComment = async (commentId: number) => {\n    await removePostComment(commentId);\n\n    loadComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      {postDetails && postDetailsLoaded\n        ? (\n          <section className=\"PostDetails__post\">\n            <p>{postDetails.body}</p>\n          </section>\n        )\n        : <Loader />}\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setCommentsHidden(!commentsHidden)}\n        >\n          {`${commentsHidden\n            ? 'Show'\n            : 'Hide'}\n            ${postComments.length} comments`}\n        </button>\n\n        {!commentsHidden && (\n          <ul className=\"PostDetails__list\">\n            {postComments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => removeComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{`Comment By ${comment.name}: ${comment.body}`}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            loadComments={loadComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getAllPosts, getUserPosts } from './api/posts';\nimport { Loader } from './components/Loader';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [postsLoaded, setPostsLoaded] = useState(false);\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      const postsFromServer = await getAllPosts();\n\n      setPostsLoaded(true);\n\n      setPosts(postsFromServer);\n    };\n\n    loadPosts();\n  }, []);\n\n  const handlePostId = (postId: number) => {\n    if (selectedPostId === postId) {\n      setSelectedPostId(0);\n    } else {\n      setSelectedPostId(postId);\n    }\n  };\n\n  async function changeUser(userId: number) {\n    const userPosts = await getUserPosts(userId);\n\n    setPosts(userPosts);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => changeUser(Number(event.target.value))}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {postsLoaded\n            ? (\n              <PostsList\n                posts={posts}\n                selectedPostId={selectedPostId}\n                handlePostId={handlePostId}\n              />\n            )\n            : <Loader />}\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== 0 && (\n            <PostDetails\n              selectedPostId={selectedPostId}\n            />\n          )}\n\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}